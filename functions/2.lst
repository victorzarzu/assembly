     1                                 %line 1+1 2.asm
     2                                 [section .data]
     3                                 
     4                                 SYS_exit equ 60
     5                                 EXIT_SUCCESS equ 0
     6                                 
     7 00000000 F7FFFFFFF1FFFFFF09-    list1 dd -9, -15, 9, 0, 17, 38
     8 00000000 000000000000001100-
     9 00000000 000026000000       
    10 00000018 06000000               len1 dd 6
    11                                 
    12 0000001C 05000000020000000A-    list2 dd 5, 2, 10, -12, -124, 14, 13, 0, -1, 6, 10
    13 0000001C 000000F4FFFFFF84FF-
    14 0000001C FFFF0E0000000D0000-
    15 0000001C 0000000000FFFFFFFF-
    16 0000001C 060000000A000000   
    17 00000048 0B000000               len2 dd 11
    18                                 
    19 0000004C 020000000600000001-    list3 dd 2, 6, 1, 10, -5, -13, 15, 34
    20 0000004C 0000000A000000FBFF-
    21 0000004C FFFFF3FFFFFF0F0000-
    22 0000004C 0022000000         
    23 0000006C 08000000               len3 dd 8
    24                                 
    25                                 [section .text]
    26                                 
    27                                 [global sort]
    28                                 sort:
    29                                 
    30 00000000 4154                   push r12
    31 00000002 49C7C400000000         mov r12, 0
    32                                 
    33                                 iterate:
    34 00000009 468B14A7                mov r10d, dword [rdi + r12 * 4]
    35 0000000D 4D89E3                  mov r11, r12
    36 00000010 4C89E1                  mov rcx, r12
    37 00000013 48FFC1                  inc rcx
    38                                 
    39                                  minimum:
    40 00000016 443B148F                cmp r10d, dword [rdi + rcx * 4]
    41 0000001A 7C05                    jl non_minim
    42 0000001C 448B148F                mov r10d, dword [rdi + rcx * 4]
    43 00000020 4989CB                  mov r11, rcx
    44                                  non_minim:
    45 00000023 48FFC1                  inc rcx
    46 00000026 39F1                    cmp ecx, esi
    47 00000028 7CEA                    jl minimum
    48 0000002A 428B04A7                mov eax, dword [rdi + r12 * 4]
    49 0000002E 468914A7                mov dword [rdi + r12 * 4], r10d
    50 00000032 4289049F                mov dword [rdi + r11 * 4], eax
    51 00000036 49FFC4                  inc r12
    52 00000039 4139F4                  cmp r12d, esi
    53 0000003C 7CC9                    jl iterate
    54                                 
    55 0000003E 415C                   pop r12
    56 00000040 C3                     ret
    57                                 
    58                                 [global _start]
    59                                 _start:
    60                                 
    61 00000041 48C7C7[00000000]       mov rdi, list1
    62 00000048 8B3425[00000000]       mov esi, dword [len1]
    63 0000004F E8A7FFFFFF             call sort
    64                                 
    65 00000054 48C7C7[00000000]       mov rdi, list2
    66 0000005B 8B3425[00000000]       mov esi, dword [len2]
    67 00000062 E894FFFFFF             call sort
    68                                 
    69 00000067 48C7C7[00000000]       mov rdi, list3
    70 0000006E 8B3425[00000000]       mov esi, dword [len3]
    71 00000075 E881FFFFFF             call sort
    72                                 
    73                                 last:
    74 0000007A 48C7C03C000000          mov rax, SYS_exit
    75 00000081 48C7C700000000          mov rdi, EXIT_SUCCESS
    76 00000088 0F05                    syscall
