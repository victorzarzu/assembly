     1                                 %line 50+1 3.asm
     2                                 
     3                                 [section .bss]
     4                                 
     5 00000000 <gap>                  string_num resb 8
     6                                 
     7                                 [section .data]
     8                                 
     9                                 SYS_exit equ 60
    10                                 EXIT_SUCCESS equ 0
    11                                 
    12 00000000 3DB9E8FF               n dd -1525443
    13                                 
    14                                 [section .text]
    15                                 [global _start]
    16                                 _start:
    17                                 
    18                                 
    19                                 %line 66+0 3.asm
    20 00000000 48C7C101000000         mov rcx, 1
    21 00000007 48C7C30A000000         mov rbx, 10
    22                                 
    23 0000000E 833C25[00000000]00     cmp dword [n], 0
    24 00000016 7C08                   jl ..@4.negative
    25 00000018 C60425[00000000]2B     mov byte [string_num], '+'
    26 00000020 EB1E                   jmp ..@4.sign
    27                                 ..@4.negative:
    28 00000022 C60425[00000000]2D     mov byte [string_num], '-'
    29 0000002A 8B0425[00000000]       mov eax, dword [n]
    30 00000031 48C7C2FFFFFFFF         mov rdx, -1
    31 00000038 48F7EA                 imul rdx
    32 0000003B 890425[00000000]       mov dword [n], eax
    33                                 ..@4.sign:
    34                                 
    35                                 ..@4.iterate:
    36 00000042 8B0425[00000000]        mov eax, dword [n]
    37 00000049 4899                    cqo
    38 0000004B 48F7FB                  idiv rbx
    39 0000004E 80C230                  add dl, '0'
    40 00000051 8891[00000000]          mov byte [string_num + rcx], dl
    41 00000057 890425[00000000]        mov dword [n], eax
    42 0000005E 48FFC1                  inc rcx
    43 00000061 833C25[00000000]00      cmp dword [n], 0
    44 00000069 75D5                    jne ..@4.iterate
    45 0000006B C681[00000000]00        mov byte [string_num + rcx], 0
    46                                 
    47 00000072 4989C8                 mov r8, rcx
    48 00000075 48C7C101000000         mov rcx, 1
    49                                 
    50                                 ..@4.pushing:
    51 0000007C 8A81[00000000]          mov al, byte [string_num + rcx]
    52 00000082 50                      push rax
    53 00000083 48FFC1                  inc rcx
    54 00000086 4C39C1                  cmp rcx, r8
    55 00000089 75EF                    jne ..@4.pushing
    56 0000008B 48C7C101000000          mov rcx, 1
    57                                 
    58                                 ..@4.poping:
    59 00000092 58                      pop rax
    60 00000093 8881[00000000]          mov byte [string_num + rcx], al
    61 00000099 48FFC1                  inc rcx
    62 0000009C 4C39C1                  cmp rcx, r8
    63 0000009F 75EF                    jne ..@4.poping
    64 000000A1 48C7C101000000          mov rcx, 1
    65                                 
    66                                 %line 67+1 3.asm
    67                                 
    68                                 last:
    69 000000A8 48C7C03C000000          mov rax, SYS_exit
    70 000000AF 48C7C700000000          mov rdi, EXIT_SUCCESS
    71 000000B6 0F05                    syscall
